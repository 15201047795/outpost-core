#!/usr/bin/env pythonrtems periodic timer

import os

# root folder of the cobc library
rootpath = '../../../../..'
modulepath = rootpath + '/modules'

# path to the xpcc root directory
xpccpath = rootpath + '/../../other/xpcc'

envGlobal = Environment(toolpath=[rootpath + '/conf/scons/site_tools'],
				        tools=['cobc', 'arm-none-eabi', 'buildpath', 'buildformat', 'buildsize'],
				        OS='freertos',
				        CCFLAGS_target=['-mcpu=cortex-m4',
				                        '-mthumb',
				                        '-mthumb-interwork',
				                        '-mfloat-abi=softfp',
				                        '-mfpu=fpv4-sp-d16',
				                        '-nostdlib',
				                        ],
                        CCFLAGS_debug=['-gdwarf-2'],
				        CCFLAGS_other=['-finline-limit=10000',
				                       '-funsigned-char',
								       '-funsigned-bitfields',
								       '-fno-split-wide-types',
								       '-fno-move-loop-invariants',
								       '-fno-tree-loop-optimize',
								       '-fno-unwind-tables',
								       ],
				        CXXFLAGS_other=['-fno-threadsafe-statics',
				                        '-fuse-cxa-atexit',
				                        ],
			        	ENV=os.environ)

envGlobal['BASEPATH'] = os.path.abspath('.')
envGlobal['BUILDPATH'] = os.path.abspath(modulepath + '/rtos/build/test/integration/freertos_periodic_task')

envGlobal.Append(CPPPATH=[
	'.',
	os.path.abspath(xpccpath + '/ext'),	# for FreeRTOS
])

envGlobal.SConscript([modulepath + '/utils/src/SConscript',
                      modulepath + '/time/src/SConscript',
                      modulepath + '/rtos/src/SConscript',
                      ],
                     exports='envGlobal')

env = envGlobal.Clone()

# Combine all libraries into one
files = []
for lib in env['objects']:
	for f in env['objects'][lib]:
		files.extend(f)

library = env.StaticLibrary('libcobc', files)
envGlobal.Alias('library', library)

env = Environment(tools= ['xpcc'],
                  toolpath = [xpccpath + '/scons/site_tools'],
                  BUILDPATH=envGlobal['BUILDPATH'])

# find all source files
files = env.FindFiles('.')
program = env.Program(target=env['XPCC_CONFIG']['general']['name'], source=files.sources + library)

env.Append(LIBS=['libcobc'])
env.Append(LIBPATH=['$BUILDPATH'])

env.Append(CPPPATH=[
	modulepath + '/utils/src',
	modulepath + '/time/src',
	modulepath + '/rtos/src',
	modulepath + '/smpc/src',
	modulepath + '/ccsds/src',
	modulepath + '/pus/src',
])
env.Append(CPPDEFINES={'COBC_RTOS':'COBC_RTOS_FREERTOS'})

# build the xpcc library
env.XpccLibrary()
env.Defines()

env.Alias('size', env.Size(program))
env.Alias('symbols', env.Symbols(program))
env.Alias('defines', env.ShowDefines())

hexfile = env.Hex(program)

env.Alias('program', env.OpenOcd(program))
env.Alias('build', [hexfile, env.Listing(program)])
env.Alias('all', ['build', 'size'])

env.Default('all')
