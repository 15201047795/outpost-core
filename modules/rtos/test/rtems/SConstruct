#!/usr/bin/env python

import os

# root folder of the libCOBC library
rootpath    = '../../../..'
modulepath  = os.path.join(rootpath, 'modules')
buildfolder = os.path.join(rootpath, 'build')

envGlobal = Environment(toolpath=[rootpath + '/conf/scons/site_tools'],
                        tools=['cobc', 'rtems-leon3', 'buildpath', 'buildformat', 'buildsize'],
                        DEVICE_SIZE={
                            'name' : 'Nexys 3 - LEON3',
                            'flash': 16777216,
                            'ram'  : 16777216
                        },
                        OS='rtems',
                        BOARD='nexys3',
                        ENV=os.environ)

envGlobal['BASEPATH']  = os.path.abspath('.')
envGlobal['BUILDPATH'] = os.path.abspath(os.path.join(buildfolder, 'rtos/test/rtems'))

envGlobal.Append(CPPPATH=[
    os.path.abspath(os.path.join(rootpath, 'modules/spp/default')),
    os.path.abspath(os.path.join(rootpath, 'modules/pus/default')),
    os.path.abspath(os.path.join(rootpath, 'modules/log/default')),
])

envGlobal.SConscript(os.path.join(rootpath, 'modules/SConscript.library'), exports='envGlobal')

env = envGlobal.Clone()

env.Append(CPPPATH=[
    '.',
    '../reference'
])

env.AppendUnique(LIBS=[
    'cobc_log',
    'cobc_pus',
    'cobc_spp',
    'cobc_rtos',
    'cobc_smpc',
    'cobc_time',
    'cobc_utils',
])
env.Append(LIBPATH=['$BUILDPATH/lib'])

files  = env.Object(env.FilteredGlob(['*.cpp', '../reference/*.cpp'], ['main.cpp']))

env = env.Clone()
env.RemoveFromList('CXXFLAGS_warning', '-Wold-style-cast')

files.append(env.Object('main.cpp'))

program = env.Program('rtems', files)

envGlobal.Alias('build', program)
envGlobal.Alias('install', env.Install(program))
envGlobal.Alias('size', env.Size(program))

envGlobal.Default('build')

