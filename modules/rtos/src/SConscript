#!/usr/bin/env python

import os

Import('envGlobal')

envGlobal.Append(CPPPATH=[os.path.abspath('.')])

env = envGlobal.Clone()

files  = env.Glob('cobc/rtos/*.cpp')
files += env.Glob('cobc/hal/*.cpp')

if env['OS'] == 'posix':
	# POSIX
	files += env.Glob('cobc/rtos/posix/*.cpp')
	
	envGlobal.Append(LIBS=['rt', 'pthread'])
elif env['OS'] == 'rtems':
	files += env.Glob('cobc/rtos/rtems/*.cpp')
	
	# Leon 3
	if env['ARCHITECTURE'] == 'leon3':
		files += env.Glob('cobc/hal/leon3-rtems/spwl/*.cpp')
		files += env.Glob('cobc/hal/leon3-rtems/*.cpp')
		
		# TODO only when compiling for the nexys3 board!
		files += env.Glob('cobc/hal/nexys3/*.cpp')
	
	# as RTEMS is C it uses C-Style casts. Therefore this warning has to
	# disabled for the RTEMS wrapper files.
	env.RemoveFromList('CXXFLAGS_warning', '-Wold-style-cast')
elif env['OS'] == 'freertos':
	files += env.Glob('cobc/rtos/freertos/*.cpp')
	
	envGlobal.Append(CPPDEFINES={'FREERTOS':None})
	
	# FreeRTOS uses C-Style casts. Therefore this warning has to
	# disabled for the FreeRTOS wrapper files.
	env.RemoveFromList('CXXFLAGS_warning', '-Wold-style-cast')
else:
	files += env.Glob('cobc/rtos/none/*.cpp')

library = env.StaticLibrary('cobc_rtos', files)
envGlobal.Install('$BUILDPATH/lib', library)

