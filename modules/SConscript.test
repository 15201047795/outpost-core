#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (c) 2014-2015, 2017-2018, German Aerospace Center (DLR)
#
# This file is part of the development version of OUTPOST.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Authors:
# - 2014-2015, 2017-2018, Fabian Greif (DLR RY-AVS)
# - 2018, Jan-Gerd Mess (DLR RY-AVS)
# - 2018, Annika Ofenloch (DLR RY-AVS)

Import('envGlobal')

envGlobal.RemoveFromList('CCFLAGS_warning', [
    # GoogleTest uses undefined symbols which would otherwise generate a lot of warnings
    '-Wundef',
])

envGlobal.SConscript([
        'utils/ext/SConscript',
        'base/test/SConscript',
        'time/test/SConscript',
        'rtos/test/SConscript',
        'utils/test/SConscript',
        'smpc/test/SConscript',
        'hal/test/SConscript',
        'l3test/src/SConscript',
        'l3test/ext/SConscript',
        'l3test/test/SConscript',
        'support/test/SConscript',
    ],
    exports='envGlobal')

envGlobal.PrependUnique(LIBS=['outpost_unittest'])
envGlobal.AppendUnique(LIBS=['googletest-local', 'pthread'])

files = envGlobal.get('objects_unittest', [])
library = envGlobal.StaticLibrary('outpost_unittest', files)
envGlobal.Install('$BUILDPATH/lib', library)

envGlobal.AppendUnique(LIBPATH=['/usr/lib', '$BUILDPATH/lib'])

# Export the symbols into the dynamic symbol table. This is needed when
# using dynamically loaded lua modules.
envGlobal.Append(LINKFLAGS=['-Wl,--export-dynamic'])

if 'append_buildpath' in envGlobal:
    envGlobal.Alias('compiledb_unittest', envGlobal.compiledb(target='unittest_compile_commands', source=envGlobal['sources_unittest']))
