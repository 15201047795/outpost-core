#!/usr/bin/env python

import os

vars = Variables('custom.py')
vars.Add(BoolVariable('coverage', 'Set to build for coverage analysis', 0))

envGlobal = Environment(variables=vars,
                        toolpath=['../../../../conf/scons/site_tools'],
				        tools=['cobc', 'hosted-llvm', 'buildpath', 'buildformat'],
			        	ENV=os.environ)

Help(vars.GenerateHelpText(envGlobal))

if envGlobal['coverage']:
	envGlobal.Append(CCFLAGS=['--coverage'])
	envGlobal.Append(LINKFLAGS=['--coverage'])

envGlobal.Append(CPPDEFINES={'UNITTEST':None})

envGlobal['BASEPATH'] = os.path.abspath('.')
envGlobal['BUILDPATH'] = os.path.abspath('../../build/test/unit')

modulepath = '../../..'
envGlobal.SConscript([
		modulepath + '/utils/src/SConscript',
        modulepath + '/utils/ext/SConscript',
        modulepath + '/time/src/SConscript',
    ], exports='envGlobal')

env = envGlobal.Clone()

# googletest uses some C++11 elements
env['CXXFLAGS_language'] = ['-std=c++0x']
env['CCFLAGS_warning'] = [
	'-W',
	'-Wall',
	'-Wextra',
	'-Wformat',
	'-Wno-unused-parameter',
	'-Winit-self',
	'-Wcast-qual',
	'-Wcast-align',
	'-Wshadow',
	'-Wpointer-arith',
	'-Wwrite-strings',
	'-Wredundant-decls',
	'-Wunused',
	'-Wuninitialized',
#	'-Wconversion',
#	'-Wold-style-cast',
#	'-Wundef',
#	'-Winline',
#	'-Wmissing-declarations',
]

env.Append(CPPPATH=['.'])
env.Append(LIBS=['cobc_time', 'pthread', 'gmock'])
env.Append(LIBPATH=['/usr/lib', '$BUILDPATH/lib'])

files  = env.Glob('*.cpp')

envGlobal.Alias('build', env.Program('unittest', files))
