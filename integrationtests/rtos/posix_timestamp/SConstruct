#!/usr/bin/env python

import os

rootpath    = '../../../../..'
modulepath  = os.path.join(rootpath, 'modules')
buildfolder = os.path.join(modulepath, '../build')

envGlobal = Environment(toolpath=['../../../../../conf/scons/site_tools'],
                        tools=['hosted-llvm', 'cobc', 'buildpath', 'buildformat'],
                        ENV=os.environ)

envGlobal['BASEPATH']  = os.path.abspath('.')
envGlobal['BUILDPATH'] = os.path.abspath(os.path.join(buildfolder, 'rtos/test/integration/hosted_float_endianness'))

envGlobal.SConscript([modulepath + '/utils/src/SConscript',
                      modulepath + '/time/src/SConscript',
                      '../../../src/SConscript'],
                     exports='envGlobal')

env = envGlobal.Clone()

env.Append(CPPPATH=[
    '.'
])
env.Append(LIBS=['cobc_rtos', 'cobc_time'])
env.Append(LIBPATH=['$BUILDPATH/lib'])

files = env.Glob('*.cpp')

program = env.Program('posix_timer', files)

env.Alias('build', program)
env.Alias('run', env.Command('thisfileshouldnotexist', program, '@"%s"' % program[0].abspath))

env.Default(['build', 'run'])
